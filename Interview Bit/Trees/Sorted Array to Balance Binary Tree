/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 TreeNode* helper(const vector<int> &num, int low, int high) {
        if (low > high) { // Done
            return NULL;
        }
        int mid = (low + high) / 2;
        TreeNode* node = new TreeNode(num[mid]);
        node->left = helper(num, low, mid - 1);
        node->right = helper(num, mid + 1, high);
        return node;
    }
TreeNode* Solution::sortedArrayToBST(const vector<int> &num) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
if (num.size() == 0) return NULL;
        return helper(num, 0, ((int)num.size()) - 1);
    
}

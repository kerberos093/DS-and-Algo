/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 * /
 */
 void mirror(TreeNode* node)  
{ 
    if (node == NULL)  
        return;  
    else
    { 
        struct TreeNode* temp; 
          
        /* do the subtrees */
        mirror(node->left); 
        mirror(node->right); 
      
        /* swap the pointers in this node */
        temp     = node->left; 
        node->left = node->right; 
        node->right = temp; 
    } 
}  
TreeNode* Solution::invertTree(TreeNode* A) {
    mirror(A);
    return A;
}
